{
	"name" : "ActionScript 3.0",
	"scopeName" : "source.actionscript.3",
	"fileTypes" : ["as"],
    "repository" : {
        "constants" : {
            "patterns" : [
                {
                    "name" : "constant.numeric.actionscript.3",
                    "match" : "\\b(0x[\\da-fA-F]+|\\d+(\\.\\d+)?)\\b|\\.\\d+\\b"
                },
                {
                    "name" : "constant.language.actionscript.3",
                    "match" : "\\b(true|false|null|this|NaN|undefined|Number\\.POSITIVE_INFINITY|Number\\.NEGATIVE_INFINITY)\\b|(\\-)?Infinity\\b"
                }
            ]
        },
        "keywords" : {
            "patterns" : [
                {
                    "name" : "keyword.control.actionscript.3",
                    "match" : "\\b(break|case|continue|default|do|while|else|for( each)?|if|return|super|switch|throw|try|catch|finally|while|with)\\b"
                },
                {
                    "comment" : "namespaces",
                    "name" : "keyword.other.actionscript.3",
                    "match" : "\\b(AS3|flash_proxy|object_proxy)\\b"
                },
                {
                    "name" : "keyword.other.actionscript.3",
                    "match" : "\\b(default xml namespace|import|include|use namespace)\\b"
                },
                {
                    "name" : "keyword.other.actionscript.3",
                    "match" : "\\b(extends|implements)\\b"
                }
            ]
        },
        "storage" : {
            "patterns" : [
                {
                    "name" : "storage.type.actionscript.3",
                    "match" : "\\b(class|const|function|interface|namespace|package|var)\\b"
                },
                {
                    "name" : "storage.modifier.actionscript.3",
                    "match" : "\\b(dynamic|final|internal|native|override|private|protected|public|static)\\b"
                }
            ]
        },
        "operators" : {
            "patterns" : [
                {
                    "name" : "keyword.operator.actionscript.3",
                    "match" : "[\\+-/\\*%\\=&~\\|^<>!,\\?:\\.@;]"
                },
                {
                    "name" : "keyword.operator.actionscript.3",
                    "match" : "\\b(as|delete|in|instanceof|is|new|typeof)\\b"
                }
            ]
        },
        "comments" : {
            "patterns" : [
                {
                    "name" : "comment.line.double-slash.actionscript.3",
                    "match" : "//.*"
                },
                {
                    "name" : "comment.block.actionscript.3",
                    "begin" : "/\\*",
                    "end" : "\\*/"
                }
            ]
        },
        "strings" : {
            "patterns" : [
                {
                    "name" : "string.quoted.double.actionscript.3",
                    "begin" : "\"",
                    "end" : "\"",
                    "patterns" : [
                        {
                            "name" : "constant.character.escape.actionscript.3",
                            "match" : "\\\\."
                        }
                    ]
                },
                {
                    "name" : "string.quoted.single.actionscript.3",
                    "begin" : "'",
                    "end" : "'",
                    "patterns" : [
                        {
                            "name" : "constant.character.escape.actionscript.3",
                            "match" : "\\\\."
                        }
                    ]
                }
            ]
        },
        "imports" : {
            "patterns" : [
                {
                    "name" : "meta.import.actionscript.3",
                    "match" : "\\b(import)\\s+(\\w+\\.)*(\\w+|\\*)(;)?",
                    "captures" : {
                        "1" : {
                            "name" : "keyword.storage.actionscript.3"
                        },
                        "3" : {
                            "name" : "support.function.actionscript.3"
                        },
                        "4" : {
                            "name" : "keyword.operator.actionscript.3"
                        }
                    }
                }
            ]
        },
        "functions" : {
            "patterns" : [
                {
                    "comment" : "function header; maybe improve matching of variable declarations at some point?",
                    "name" : "meta.function.header.actionscript.3",
                    "begin" : "\\b(function)(\\s+([sg]et\\s+)?(\\w*))?\\s*\\(",
                    "beginCaptures" : {
                        "1" : {
                            "name" : "storage.type.actionscript.3"
                        },
                        "3" : {
                            "name" : "keyword.other.actionscript.3"
                        },
                        "4" : {
                            "name" : "entity.name.function.actionscript.3"
                        }
                    },
                    "end" : "\\)((:)\\s*(\\w+|\\*)\\b)?",
                    "endCaptures" : {
                        "2" : {
                            "name" : "keyword.operator.actionscript.3"
                        },
                        "3" : {
                            "name" : "storage.type.actionscript.3"
                        }
                    },
                    "patterns" : [
                        {
                            "include" : "#meta-storage-var-type"
                        },
                        {
                            "include" : "#constants"
                        },
                        {
                            "include" : "#operators"
                        },
                        {
                            "include" : "#comments"
                        },
                        {
                            "include" : "#strings"
                        },
                        {
                            "name" : "variable.parameter.actionscript.3",
                            "match" : "\\b\\w+\\b"
                        }
                    ]
                }
            ]
        },
        "meta-storage-var-type" : {
            "patterns" : [
                {
                    "name" : "meta.storage.type.actionscript.3",
                    "match" : "(:)\\s*(\\w+\\.)*(\\w+)\\b",
                    "captures" : {
                        "1" : {
                            "name" : "keyword.operator.actionscript.3"
                        },
                        "3" : {
                            "name" : "storage.type.actionscript.3"
                        }
                    }
                }
            ]
        },
        "meta-storage-new" : {
            "patterns" : [
                {
                    "name" : "meta.storage.type.actionscript.3",
                    "match" : "\\b(new)\\s+((\\w+\\.)*)(\\w+)\\b",
                    "captures" : {
                        "1" : {
                            "name" : "keyword.other.actionscript.3"
                        },
                        "4" : {
                            "name" : "storage.type.actionscript.3"
                        }
                    }
                }
            ]
        },
        "var-declarations" : {
            "comment" : "using this to catch meta-storage-var-type, cos otherwise that will also catch literal object declarations. also ending this with a ';' since otherwise I'm thinking it will be a ballache to catch, even though it is not *technically* required to end the line.... complaints on a postcard please.",
            "begin" : "\\b(var|const)\\b",
            "beginCaptures" : {
                "0" : {
                    "name" : "storage.type.actionscript.3"
                }
            },
            "end" : ";|\\bin\\b",
            "endCaptures" : {
                "0" : {
                    "name" : "keyword.operator.actionscript.3"
                }
            },
            "patterns" : [
                {
                    "include" : "#meta-storage-var-type"
                },
                {
                    "include" : "#meta-storage-new"
                },
                {
                    "include" : "#blocks"
                },
                {
                    "include" : "#constants"
                },
                {
                    "include" : "#comments"
                },
                {
                    "include" : "#strings"
                },
                {
                    "include" : "#operators"
                }
            ]
        },
        "block-contents" : {
            "patterns" : [
                {
                    "include" : "#meta-storage-new"
                },
                {
                    "include" : "#var-declarations"
                },
                {
                    "include" : "#constants"
                },
                {
                    "include" : "#keywords"
                },
                {
                    "include" : "#storage"
                },
                {
                    "include" : "#comments"
                },
                {
                    "include" : "#strings"
                },
                {
                    "include" : "#imports"
                },
                {
                    "include" : "#operators"
                }
            ]
        },
        "packages" : {
            "patterns" : [
                {
                    "comment" : "package header",
                    "name" : "meta.package.header.actionscript.3",
                    "match" : "\\b(package)(\\s+[\\w\\.]+)?",
                    "captures" : {
                        "1" : {
                            "name" : "storage.type.actionscript.3"
                        },
                        "2" : {
                            "name" : "entity.name.type.package.actionscript.3"
                        }
                    }
                },
                {
                    "name" : "meta.package.actionscript.3",
                    "begin" : "\\{",
                    "end" : "\\}",
                    "patterns" : [
                        {
                            "include" : "#classes"
                        },
                        {
                            "include" : "#comments"
                        },
                        {
                            "include" : "#imports"
                        }
                    ]
                }
            ]
        },
        "classes" : {
            "patterns" : [
                {
                    "comment" : "class header; currently will only capture the first declared interface",
                    "name" : "meta.class.header.actionscript.3",
                    "match" : "\\b(\\w*)\\s*\\b(class)\\s+(\\w+)(\\s+(extends)\\s+(\\w+\\.)*(\\w+))?(\\s+(implements)\\s+(\\w+\\.)*(\\w+))?",
                    "captures" : {
                        "1" : {
                            "name" : "storage.modifier.actionscript.3"
                        },
                        "2" : {
                            "name" : "storage.type.actionscript.3"
                        },
                        "3" : {
                            "name" : "entity.name.type.class.actionscript.3"
                        },
                        "5" : {
                            "name" : "keyword.other.actionscript.3"
                        },
                        "7" : {
                            "name" : "entity.other.inherited-class.actionscript.3"
                        },
                        "9" : {
                            "name" : "keyword.other.actionscript.3"
                        },
                        "11" : {
                            "name" : "entity.other.inherited-class.actionscript.3"
                        }
                    }
                },
                {
                    "name" : "meta.class.actionscript.3",
                    "begin" : "\\{",
                    "end" : "\\}",
                    "patterns" : [
                        {
                            "include" : "#blocks"
                        },
                        {
                            "include" : "#block-contents"
                        }
                    ]
                }
            ]
        },
        "blocks" : {
            "patterns" : [
                {
                    "name" : "meta.block.actionscript.3",
                    "begin" : "\\{",
                    "end" : "\\}",
                    "patterns" : [
                        {
                            "include" : "#blocks"
                        },
                        {
                            "include" : "#block-contents"
                        }
                    ]
                },
                {
                    "include" : "#functions"
                }
            ]
        }
    },
	"patterns" : [
        {
            "include" : "#packages"
        }
	]
}